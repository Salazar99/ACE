$date
	Wed Apr 23 14:31:13 2025
$end
$version
	ModelSim Version 2019.4
$end
$timescale
	1ns
$end

$scope module tb_sequence_generator $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # enable $end
$var reg 32 $ start_value [31:0] $end
$var reg 32 % step [31:0] $end
$var reg 32 & range_min [31:0] $end
$var reg 32 ' range_max [31:0] $end
$var reg 32 ( sequence_value [31:0] $end
$var reg 1 ) done $end

$scope module dut $end
$var wire 1 * clk $end
$var wire 1 + rst_n $end
$var wire 1 , enable $end
$var wire 1 - start_value [31] $end
$var wire 1 . start_value [30] $end
$var wire 1 / start_value [29] $end
$var wire 1 0 start_value [28] $end
$var wire 1 1 start_value [27] $end
$var wire 1 2 start_value [26] $end
$var wire 1 3 start_value [25] $end
$var wire 1 4 start_value [24] $end
$var wire 1 5 start_value [23] $end
$var wire 1 6 start_value [22] $end
$var wire 1 7 start_value [21] $end
$var wire 1 8 start_value [20] $end
$var wire 1 9 start_value [19] $end
$var wire 1 : start_value [18] $end
$var wire 1 ; start_value [17] $end
$var wire 1 < start_value [16] $end
$var wire 1 = start_value [15] $end
$var wire 1 > start_value [14] $end
$var wire 1 ? start_value [13] $end
$var wire 1 @ start_value [12] $end
$var wire 1 A start_value [11] $end
$var wire 1 B start_value [10] $end
$var wire 1 C start_value [9] $end
$var wire 1 D start_value [8] $end
$var wire 1 E start_value [7] $end
$var wire 1 F start_value [6] $end
$var wire 1 G start_value [5] $end
$var wire 1 H start_value [4] $end
$var wire 1 I start_value [3] $end
$var wire 1 J start_value [2] $end
$var wire 1 K start_value [1] $end
$var wire 1 L start_value [0] $end
$var wire 1 M step [31] $end
$var wire 1 N step [30] $end
$var wire 1 O step [29] $end
$var wire 1 P step [28] $end
$var wire 1 Q step [27] $end
$var wire 1 R step [26] $end
$var wire 1 S step [25] $end
$var wire 1 T step [24] $end
$var wire 1 U step [23] $end
$var wire 1 V step [22] $end
$var wire 1 W step [21] $end
$var wire 1 X step [20] $end
$var wire 1 Y step [19] $end
$var wire 1 Z step [18] $end
$var wire 1 [ step [17] $end
$var wire 1 \ step [16] $end
$var wire 1 ] step [15] $end
$var wire 1 ^ step [14] $end
$var wire 1 _ step [13] $end
$var wire 1 ` step [12] $end
$var wire 1 a step [11] $end
$var wire 1 b step [10] $end
$var wire 1 c step [9] $end
$var wire 1 d step [8] $end
$var wire 1 e step [7] $end
$var wire 1 f step [6] $end
$var wire 1 g step [5] $end
$var wire 1 h step [4] $end
$var wire 1 i step [3] $end
$var wire 1 j step [2] $end
$var wire 1 k step [1] $end
$var wire 1 l step [0] $end
$var wire 1 m range_min [31] $end
$var wire 1 n range_min [30] $end
$var wire 1 o range_min [29] $end
$var wire 1 p range_min [28] $end
$var wire 1 q range_min [27] $end
$var wire 1 r range_min [26] $end
$var wire 1 s range_min [25] $end
$var wire 1 t range_min [24] $end
$var wire 1 u range_min [23] $end
$var wire 1 v range_min [22] $end
$var wire 1 w range_min [21] $end
$var wire 1 x range_min [20] $end
$var wire 1 y range_min [19] $end
$var wire 1 z range_min [18] $end
$var wire 1 { range_min [17] $end
$var wire 1 | range_min [16] $end
$var wire 1 } range_min [15] $end
$var wire 1 ~ range_min [14] $end
$var wire 1 !! range_min [13] $end
$var wire 1 "! range_min [12] $end
$var wire 1 #! range_min [11] $end
$var wire 1 $! range_min [10] $end
$var wire 1 %! range_min [9] $end
$var wire 1 &! range_min [8] $end
$var wire 1 '! range_min [7] $end
$var wire 1 (! range_min [6] $end
$var wire 1 )! range_min [5] $end
$var wire 1 *! range_min [4] $end
$var wire 1 +! range_min [3] $end
$var wire 1 ,! range_min [2] $end
$var wire 1 -! range_min [1] $end
$var wire 1 .! range_min [0] $end
$var wire 1 /! range_max [31] $end
$var wire 1 0! range_max [30] $end
$var wire 1 1! range_max [29] $end
$var wire 1 2! range_max [28] $end
$var wire 1 3! range_max [27] $end
$var wire 1 4! range_max [26] $end
$var wire 1 5! range_max [25] $end
$var wire 1 6! range_max [24] $end
$var wire 1 7! range_max [23] $end
$var wire 1 8! range_max [22] $end
$var wire 1 9! range_max [21] $end
$var wire 1 :! range_max [20] $end
$var wire 1 ;! range_max [19] $end
$var wire 1 <! range_max [18] $end
$var wire 1 =! range_max [17] $end
$var wire 1 >! range_max [16] $end
$var wire 1 ?! range_max [15] $end
$var wire 1 @! range_max [14] $end
$var wire 1 A! range_max [13] $end
$var wire 1 B! range_max [12] $end
$var wire 1 C! range_max [11] $end
$var wire 1 D! range_max [10] $end
$var wire 1 E! range_max [9] $end
$var wire 1 F! range_max [8] $end
$var wire 1 G! range_max [7] $end
$var wire 1 H! range_max [6] $end
$var wire 1 I! range_max [5] $end
$var wire 1 J! range_max [4] $end
$var wire 1 K! range_max [3] $end
$var wire 1 L! range_max [2] $end
$var wire 1 M! range_max [1] $end
$var wire 1 N! range_max [0] $end
$var reg 32 O! sequence_value [31:0] $end
$var reg 1 P! done $end
$var reg 2 Q! current_state [1:0] $end
$var reg 2 R! next_state [1:0] $end
$var reg 32 S! current_value [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
0#
b1010 $
b10 %
b101 &
b10100 '
b0 (
0)
b0 O!
0P!
b0 Q!
b0 R!
b0 S!
0N!
0M!
1L!
0K!
1J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
1.!
0-!
1,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
1k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
1K
0J
1I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
$end
#5
1!
1*
#10
1"
0!
1+
0*
#15
1!
1*
#20
1#
0!
1,
0*
b1 R!
#25
1!
1*
b1 Q!
b10 R!
#30
0!
0*
#35
1!
1*
b10 Q!
b1010 S!
b1010 O!
b1010 (
#40
0!
0*
#45
1!
1*
b1100 S!
b1100 O!
b1100 (
#50
0!
0*
#55
1!
1*
b1110 S!
b1110 O!
b1110 (
#60
0!
0*
#65
1!
1*
b10000 S!
b10000 O!
b10000 (
#70
0!
0*
#75
1!
1*
b10010 S!
b10010 O!
b10010 (
#80
0!
0*
#85
1!
1*
b10100 S!
b10100 O!
b10100 (
b11 R!
#90
0!
0*
#95
1!
1*
b11 Q!
b10110 S!
b10110 O!
b10110 (
#100
0!
0*
#105
1!
1*
1P!
1)
#110
0!
0*
#115
1!
1*
#120
0#
0!
0,
0*
b0 R!
#125
1!
1*
b0 Q!
#130
0!
0*
#135
1!
1*
0P!
b0 O!
b0 (
0)
